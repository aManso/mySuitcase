{"version":3,"file":"src_app_core_login_login_module_ts.js","mappings":"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","sources":["./src/app/core/login/containers/login.component.ts","./src/app/core/login/containers/login.component.html","./src/app/core/login/login-routing.module.ts","./src/app/core/login/login.module.ts"],"sourcesContent":["import { Inject, Component, OnInit, InjectionToken } from '@angular/core';\nimport { LoginService } from '../login.service';\nimport { Router } from '@angular/router';\nimport { UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport { User } from '../../../core/models/user';\nimport { AuthenticationGuard } from '../../../core/guards/authentication.guard';\n// TODO use it when launching to PROD\nimport { passwordValidator } from '../../../core/validators/validators';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {EXTENDED_SNACKBAR_TIME, GENERAL_SNACKBAR_TIME} from '../../../core/config/config';\nimport { BACKEND_ERRORS, BACKEND_ERROR_TYPES } from '../../const/backend-errors';\nimport { FRONTEND_ERRORS } from '../../const/frontend-errors';\n\nexport const BASE_ROUTE = new InjectionToken<string[]>('BASE_ROUTE');\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit{\n  public loginForm: UntypedFormGroup;\n  public loginMode = true;\n\n  public constructor(\n    private _loginService: LoginService,\n    public _authenticationGuard: AuthenticationGuard,\n    private _router: Router,\n    @Inject(BASE_ROUTE) private baseRoute: string[],\n    private fb: UntypedFormBuilder,\n    private _snackBar: MatSnackBar,\n  ) {\n  }\n\n  public ngOnInit() {\n    this.loginForm = this._setLoginForm();\n  }\n\n  private _setLoginForm() {\n    return this.fb.group({\n      keepSession: [null],\n      email: [null, Validators.compose([Validators.required, Validators.email])],\n      password: new UntypedFormControl(null, [\n        Validators.required,\n        Validators.minLength(6),\n        Validators.maxLength(20),\n        // passwordValidator(),\n      ]),\n    });\n  }\n\n  private _setRememberForm() {\n    return this.fb.group({\n      email: [null, Validators.compose([Validators.required, Validators.email])],\n    });\n  }\n\n  public toggleMode() {\n    this.loginMode = !this.loginMode;\n    this.loginForm = this.loginMode ? this._setLoginForm() : this._setRememberForm();\n  }\n\n  public goTo(path: string) {\n    this._router.navigate([path]);\n  }\n\n  public submit() {\n    if (this.loginForm.valid) {\n      this._loginService.login(this.loginForm.value).subscribe((user: User|boolean) => {\n        if (user) {\n          const targetUrl = this._authenticationGuard.lastIntendedTargetRoute ? this._authenticationGuard.lastIntendedTargetRoute : this.baseRoute;\n          this._router.navigate([targetUrl]);\n        } else {\n          this._showGeneralError();\n        }\n      },\n        (error: any) => {\n          if (error.error === BACKEND_ERROR_TYPES.USER_NOT_FOUND) {\n            this._snackBar.open(BACKEND_ERRORS.USER_NOT_FOUND.title, '', {duration: GENERAL_SNACKBAR_TIME});\n          } else {\n            this._showGeneralError();\n          }\n        });\n    }\n  }\n\n  private _showGeneralError() {\n    this._snackBar.open(FRONTEND_ERRORS.GENERAL_ERROR.title, FRONTEND_ERRORS.GENERAL_ERROR.message, {duration: EXTENDED_SNACKBAR_TIME});\n  }\n}\n","<navbar-component></navbar-component>\n\n<form class=\"form-contact col-lg-6 col-xl-6 offset-xl-1\" [formGroup]=\"loginForm\">\n  <div class=\"search-wrapper\">\n    <mat-form-field class=\"full-width login-field\" appearance=\"outline\">\n      <mat-label>Email</mat-label>\n      <input type=\"email\" matInput autocomplete=\"off\" formControlName=\"email\" i18n-placeholder placeholder=\"Introduce your email\">\n      <mat-error *ngIf=\"loginForm.get('email').hasError('email') && !loginForm.get('email').hasError('required')\" i18n>\n        the e-mail format is not valid\n      </mat-error>\n      <mat-error *ngIf=\"loginForm.get('email').hasError('required')\" i18n>\n        The field Email is <strong>requered</strong>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field *ngIf=\"loginMode\" class=\"full-width login-field\" appearance=\"outline\">\n      <mat-label i18n=\"@@password\">Password</mat-label>\n      <input type=\"password\" matInput autocomplete=\"off\" formControlName=\"password\" i18n-placeholder placeholder=\"Introduce your password\">\n      <mat-error *ngIf=\"loginForm.get('password').hasError('required')\" i18n>\n        The field password is <strong>requered</strong>\n      </mat-error>\n      <mat-hint class=\"hint-password\" i18n=\"@@pass_requirements\">Password must contain between 6 and 20 characters and include 1 lowercase, 1 capitalcase, 1 number and 1 special character</mat-hint>\n    </mat-form-field>\n    <div class=\"form-check\" *ngIf=\"loginMode\">\n      <input type=\"checkbox\" class=\"form-check-input\" id=\"rememberme\" formControlName=\"keepSession\">\n      <label class=\"form-check-label\" for=\"rememberme\" i18n>Remember me</label>\n    </div>\n    <div class=\"button-block\">\n      <button type=\"submit\" class=\"button border-1 mt-3\" [disabled]=\"!loginForm.valid\" [ngClass]=\"{'disabled-button': !loginForm.valid}\"\n        (click)=\"submit()\" i18n>Go ahead!</button>\n      <button type=\"submit\" class=\"button border-1 mt-3\" (click)=\"goTo('register')\" i18n>I am new, Let's start!</button>\n    </div>\n    <small>\n      <a href=\"javascript:void(0)\" (click)=\"toggleMode()\" class=\"nav-link\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" \n      *ngIf=\"loginMode; else registerMode\" i18n>Did you forget the password?</a>\n      <ng-template #registerMode>\n        <a href=\"javascript:void(0)\" (click)=\"toggleMode()\" class=\"nav-link\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" i18n>I already remember the passoword :)</a>\n      </ng-template>\n    </small>\n  </div>\n  <img class=\"login-img\" alt=\"login image\" src=\"assets/img/login/undraw_travelers.svg\">\n</form>\n\n<footer-component></footer-component>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './containers/login.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../../core/shared/shared.module';\nimport { BASE_ROUTE, LoginComponent} from './containers/login.component';\nimport { LoginRoutingModule } from './login-routing.module';\nimport { CommonModule } from '@angular/common';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatInputModule} from '@angular/material/input';\nimport { LoginService } from './login.service';\nimport { AuthenticationGuard } from '../guards/authentication.guard';\nimport { AuthorizationGuard } from '../guards/authorization.guard';\nimport { SessionModule } from '../session/session.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    SessionModule.forRoot({MINUTES_TO_SHOW_COUNTDOWN: undefined}),\n    LoginRoutingModule,\n    ReactiveFormsModule,\n    MatSnackBarModule,\n    MatInputModule,\n  ],\n  declarations: [\n    LoginComponent,\n  ],\n  exports: [],\n  providers: [\n    LoginService,\n    AuthenticationGuard,\n    AuthorizationGuard,\n    {provide: BASE_ROUTE, useValue: '/'},\n  ],\n})\nexport class LoginModule {\n  constructor() {}\n}\n"],"names":["InjectionToken","UntypedFormControl","Validators","EXTENDED_SNACKBAR_TIME","GENERAL_SNACKBAR_TIME","BACKEND_ERRORS","BACKEND_ERROR_TYPES","FRONTEND_ERRORS","i0","ɵɵelementStart","ɵɵi18n","ɵɵelementEnd","ɵɵi18nStart","ɵɵelement","ɵɵi18nEnd","ɵɵtemplate","LoginComponent_mat_form_field_9_mat_error_4_Template","ɵɵadvance","ɵɵproperty","ctx_r2","loginForm","get","hasError","ɵɵlistener","LoginComponent_a_17_Template_a_click_0_listener","ɵɵrestoreView","_r9","ctx_r8","ɵɵnextContext","ɵɵresetView","toggleMode","LoginComponent_ng_template_18_Template_a_click_0_listener","_r11","ctx_r10","BASE_ROUTE","LoginComponent","constructor","_loginService","_authenticationGuard","_router","baseRoute","fb","_snackBar","loginMode","ngOnInit","_setLoginForm","group","keepSession","email","compose","required","password","minLength","maxLength","_setRememberForm","goTo","path","navigate","submit","valid","login","value","subscribe","user","targetUrl","lastIntendedTargetRoute","_showGeneralError","error","USER_NOT_FOUND","open","title","duration","GENERAL_ERROR","message","ɵɵdirectiveInject","i1","LoginService","i2","AuthenticationGuard","i3","Router","i4","UntypedFormBuilder","i5","MatSnackBar","selectors","decls","vars","consts","i18n_0","ngI18nClosureMode","$localize","ɵɵtext","LoginComponent_mat_error_7_Template","LoginComponent_mat_error_8_Template","LoginComponent_mat_form_field_9_Template","LoginComponent_div_10_Template","LoginComponent_Template_button_click_12_listener","ctx","LoginComponent_Template_button_click_14_listener","LoginComponent_a_17_Template","LoginComponent_ng_template_18_Template","ɵɵtemplateRefExtractor","ɵɵpureFunction1","_c24","_r5","RouterModule","routes","component","LoginRoutingModule","forChild","imports","exports","ReactiveFormsModule","SharedModule","CommonModule","MatSnackBarModule","MatInputModule","AuthorizationGuard","SessionModule","LoginModule","provide","useValue","forRoot","MINUTES_TO_SHOW_COUNTDOWN","undefined","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}