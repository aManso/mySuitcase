{"version":3,"file":"common.js","mappings":"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","sources":["./src/app/core/guards/authentication.guard.ts","./src/app/core/guards/authorization.guard.ts","./src/app/core/session/session.module.ts","./src/app/core/session/timeout-dialog/timeout-dialog.component.ts","./src/app/core/session/timeout-dialog/timeout-dialog.component.html","./src/app/core/validators/validators.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\nimport { LoginService } from '../login/login.service';\n\n@Injectable()\nexport class AuthenticationGuard  {\n  public lastIntendedTargetRoute: string;\n\n  constructor(\n    private _loginService: LoginService,\n    private _router: Router,\n    ) {}\n\n  public canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    this.lastIntendedTargetRoute = state.url;\n    const loggedUser = this._loginService.isLoggedIn();\n    if (!loggedUser) {\n      this._router.navigate(['/login']);\n    }\n    return loggedUser;\n  }\n\n  public canActivateChild(): boolean {\n    const loggedUser = this._loginService.isLoggedIn();\n    if (!loggedUser) {\n      this._router.navigate(['/login']);\n    }\n    return loggedUser;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { LoginService } from '../login/login.service';\nimport { User } from \"../models/user\";\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class AuthorizationGuard  {\n  public lastIntendedTargetRoute: string;\n\n  constructor(\n    private _userService: UserService,\n    private _loginService: LoginService,\n    private _router: Router,\n    ) {}\n\n  public canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean|Observable<boolean> {\n    this.lastIntendedTargetRoute = state.url;\n    // if user is logged in because token is stored..\n    if(this._loginService.isLoggedIn()) {\n      // it could be that it tries to access via url, so the service has not stored the user yet, therefore we recover it\n      if (!this._userService.activeUser) {\n        return this._loginService.recoverActiveUser().pipe(\n          map((user:User)=>{\n            if (user) {\n              return this._checkAdminUser(user);\n            } else {\n              this._router.navigate(['/login']);\n              return false;\n            }\n          }),\n          catchError(()=> {\n            this._router.navigate(['/login']);\n            return of(false);\n          })\n        )\n      } else if (this._checkAdminUser(this._userService.activeUser)) {\n        // if there is not an active user or it has not admin rights, we redirect to login\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private _checkAdminUser(user: User): boolean {\n    return this._userService.activeUser && this._userService.activeUser.admin;\n  }\n\n  public canActivateChild(): boolean {\n    // we get the logged user if exists\n    // if there is not an active user or it has not admin rights, we redirect to login\n    if (!this._userService.activeUser || !this._userService.activeUser.admin) {\n      this._router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatDialogModule, MAT_DIALOG_DEFAULT_OPTIONS as MAT_DIALOG_DEFAULT_OPTIONS} from '@angular/material/dialog';\n\nimport { TimeoutDialogComponent } from './timeout-dialog/timeout-dialog.component';\nimport { SessionService, SessionServiceConfig } from './session.service';\n\n@NgModule({\n    imports: [CommonModule, MatDialogModule],\n    declarations: [TimeoutDialogComponent],\n    exports: [TimeoutDialogComponent],\n    providers: [{ provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: { hasBackdrop: true } }]\n})\nexport class SessionModule {\n  constructor(@Optional() @SkipSelf() parentModule?: SessionModule) {\n    if (parentModule) {\n      throw new Error(\n        'SessionModule is already loaded. Import it in the PublicModule or AdminModule only');\n    }\n  }\n\n  // This way if sessionModule is used by other modules, SessionServiceConfig will still be created once, as it keeps as\n  // singleton. MAT_DIALOG_DEFAULT_OPTIONS that has been set in the providers of the module, can create several instances\n  static forRoot(config: SessionServiceConfig): ModuleWithProviders<SessionModule> {\n    return {\n      ngModule: SessionModule,\n      providers: [\n        SessionService,\n        {provide: SessionServiceConfig, useValue: config }\n      ]\n    };\n  }\n\n  static forChild(config: SessionServiceConfig): ModuleWithProviders<SessionModule> {\n    return {\n      ngModule: SessionModule,\n      providers: [\n        SessionService,\n        {provide: SessionServiceConfig, useValue: config }\n      ]\n    };\n  }\n}\n","import { Component } from '@angular/core';\nimport {SessionService} from '../session.service';\n\n@Component({\n  selector: 'my-suitcase-timeout-dialog',\n  templateUrl: 'timeout-dialog.component.html',\n})\nexport class TimeoutDialogComponent {\n\n  constructor(\n    public readonly sessionService: SessionService,\n  ) {\n  }\n}\n","<h2 mat-dialog-title i18n>The session is about to expire</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <p><span i18n>The session is going to expire in </span> {{sessionService.sessionSeconds}} <span i18n>seconds</span></p>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button color=\"warn\" i18n>Logout</button>\n  <button mat-button mat-dialog-close=\"true\" cdkFocusInitial color=\"primary\" i18n>Stay</button>\n</mat-dialog-actions>\n","import { AbstractControl, UntypedFormGroup, ValidationErrors, ValidatorFn } from '@angular/forms';\n\n// The passwordValidator factory returns the configured validator function.\n// That function takes an Angular control object and returns either null if the control value is valid or a validation error object.\n// The validation error object typically has a property whose name is the validation key, 'forbiddenName',\n// and whose value is an arbitrary dictionary of values that you could insert into an error message, {password}.\n\n// Password matching expression.\n// Password must be at least 6 characters, no more than 20 characters, and must include at least one upper case letter,\n// one lower case letter, one numeric digit and one special character.\n// const passwordRegExp: RegExp = new RegExp('^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*['+ allowedSpecialChars +']).{6,20}$');\nconst passwordRegExp: RegExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[-!#$%{}()*+,.:;|?@_])[A-Za-z\\d-!#$%{}()*+,.:;|?@_]{6,20}$/;\nexport function passwordValidator(): ValidatorFn {\n  return (control: AbstractControl): {[key: string]: any} | null => {\n    const allowed = passwordRegExp.test(control.value);\n    return allowed ? null : {'forbiddenPassword': {value: control.value}};\n  };\n}\n\n// The passwordMatchingValidator is a cross-validation function to check that the formControl 'password' of a formGroup and\n// its confirmation formControl 'passwordConfinmation' matches.\n// It returns null if both matches, making the formGroup valid, or add a field 'notMatchingPasswords' that is added as error\nexport const passwordMatchingValidator: ValidatorFn = (control: UntypedFormGroup): ValidationErrors | null => {\n  const password = control.get('password');\n  const passwordConfirmation = control.get('passwordConfirmation');\n\n  return password && passwordConfirmation && password.value !== passwordConfirmation.value ? { 'notMatchingPasswords': true } : null;\n};\n"],"names":["AuthenticationGuard","constructor","_loginService","_router","canActivate","route","state","lastIntendedTargetRoute","url","loggedUser","isLoggedIn","navigate","canActivateChild","i0","ɵɵinject","i1","LoginService","i2","Router","factory","ɵfac","of","catchError","map","AuthorizationGuard","_userService","activeUser","recoverActiveUser","pipe","user","_checkAdminUser","admin","UserService","i3","CommonModule","MatDialogModule","MAT_DIALOG_DEFAULT_OPTIONS","TimeoutDialogComponent","SessionService","SessionServiceConfig","SessionModule","parentModule","Error","forRoot","config","ngModule","providers","provide","useValue","forChild","hasBackdrop","imports","declarations","exports","sessionService","ɵɵdirectiveInject","selectors","decls","vars","consts","i18n_0","ngI18nClosureMode","$localize","ɵɵelementStart","ɵɵi18n","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","ctx","sessionSeconds","passwordRegExp","passwordValidator","control","allowed","test","value","passwordMatchingValidator","password","get","passwordConfirmation"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}